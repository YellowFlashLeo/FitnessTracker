@*@page "/trainingDaysArchive"
@using FitnessTracker.Shared.Domain
@inject IMonthlyStatisticsService MonthlyStatisticsService


<div class="main">
    @if (trainingDays == null)
    {
        <text>Loading...</text>
    }
    else if (!trainingDays.Any())
    {
        <h2>You did not train , yet!</h2>
        <a class="btn btn-success" href="">Probably, you forgot to save your training</a>
    }
    else
    {
        <div class="list-group orders-list">
            @foreach (var item in trainingDays)
            {
                <div class="list-group-item">
                    <div class="col">
                        <h5>@item.Trained.ToLongDateString()</h5>
                        Muscle Group:
                        <strong>@item.Exercise.FirstOrDefault()?.MuscleGroup</strong>;
                        @foreach (var exercise in item.Exercise)
                        {
                            <div class="col">
                                Exercise:
                                <strong>@exercise.Name</strong>
                                Weight:
                                <strong>@exercise.Weight kg</strong>
                                Sets:
                                <strong>@exercise.Sets</strong>
                                Reps:
                                <strong>@exercise.Reps</strong>
                            </div>
                        }
                    </div>
                    <div class="col">
                        Calories: <strong>@item.GetMealsTotalCalories()</strong>
                    </div>
                    <div class="col">
                        Carbohydrates: <strong>@item.GetMealsTotalCarbs()</strong>
                        Protein: <strong>@item.GetMealsTotalProtein()</strong>
                        Fats: <strong>@item.GetMealsTotalFats()</strong>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    List<TrainingDayDto> trainingDays;

    protected override async Task OnInitializedAsync()
    {
        trainingDays = await MonthlyStatisticsService.GetAllTrainingDays();
    }
}*@